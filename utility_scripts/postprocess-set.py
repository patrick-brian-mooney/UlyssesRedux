#!/usr/bin/env python3
"""When all 18 chapters of a Ulysses Redux set have been written, run this script
to postprocess the index.html file that's been created.

Currently, this script performs the following actions:
    * Updates the Git repo with currently existing code, then commits the code
      to the current branch of the Git repository.
    * Updates the coding journal on the UlyssesRedux webspace on my personal
      website.
    * Transforms the HTML fragment index.html, which is generated by the
      multiple runs of daily_script.py, into a full-fledged table of contents
      file, then puts that file with an appropriate name in the directory
      /~patrick/projects/UlyssesRedux/contents, which is the local directory
      from which it will be synced to my actual web site.
      * In order to do so, it reads the file /UlyssesRedux/current-run/data.csv
        and looks for data about the current run there. What it can't find, it
        prompts for.
    * Adds an index line to the meta- (master) table of contents at
      /~patrick/projects/UlyssesRedux/contents/index.html.
    * Syncs the modified local website copy to the website. Note that this syncs
      the entire local copy of my website to the server, not just the Ulysses
      Redux content (and so I sometimes say 'no' if there are other, incomplete
      changes in process).
    * Sets up the next run (by running setup-run.py).
For most (all?) of these actions, explicit user confirmation is requested before
the action is actually performed.

This program is licensed under the GPL v3 or, at your option, any later
version. See the file LICENSE.md for a copy of this licence.
"""

debugging_flag = True

import csv, time, glob, subprocess, os, sys, datetime

sys.path.append('/UlyssesRedux/scripts/')
from directory_structure import *           # Gets us the listing of file and directory locations.
import utility_scripts.current_run_data_utils as cr_data

import social_media, social_media_auth      # https://github.com/patrick-brian-mooney/personal-library/blob/master/social_media.py                    

if debugging_flag: print("INFO: imports successful.")

# Set up some constants
current_episode_number =  1 + int(sorted(glob.glob('%s???.html' % webpage_contents_directory ))[-1][-8:-5])

# All right, let's read the expected data from the data file
cr_data.validate_data()
current_run_data = cr_data.read_current_run_parameters()

if debugging_flag: print("INFO: constants set up; .csv dictionary has been read.")

# All right, let's sync the code to the folder that actually maintains the Git repository. If desired

# First, though, let's get basic info about the current git branch that we'll need later even if not syncing.
oldpath = os.getcwd()
try:
    os.chdir(git_repo_path)
    current_git_branch = subprocess.check_output(['git symbolic-ref --short HEAD'], shell=True).decode().split('\n')[0]
    print("\n\nCurrent git branch is:\n   " + current_git_branch)
    if input('update Git repo with changed code files in this branch? ').lower()[0] == 'y':
        subprocess.check_call(['git add -u'], shell=True)
        current_git_status = subprocess.check_output(['git status'], shell=True)
        print("Current git status is\n  " + current_git_status.decode())
        if input('GIVEN THIS STATUS, do you want to commit? ').lower()[0] == 'y':
            subprocess.call(['git commit'], shell=True)
            if input('Push branch %s to remote server? ' % current_git_branch).lower()[0] == 'y':
                subprocess.check_call(['git push origin %s' % current_git_branch], shell=True)
                if input('Switch to master branch and merge these changes? ').lower()[0] == 'y':
                    print('\n')
                    subprocess.check_call(['git checkout master'], shell=True)
                    subprocess.check_call(['git merge %s' % current_git_branch], shell=True)
                    print("\nWARNING: THE MASTER BRANCH IS NOW THE CURRENT BRANCH\n")
                    if input('Push master branch to remote server? ').lower()[0] == 'y':
                        subprocess.check_call(['git push origin master'], shell=True)
finally:
    os.chdir(oldpath)

if debugging_flag: print("\n\nINFO: Git work done, beginning to generate HTML table of contents")

html_header = """<!doctype html>
<html prefix="og: http://ogp.me/ns#" xml:lang="en" lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="utf-8" />
  <link rel="stylesheet" type="text/css" href="/~patrick/css/skeleton-normalize.css" />
  <link rel="stylesheet" type="text/css" href="/~patrick/css/skeleton.css" />
  <link rel="stylesheet" type="text/css" href="/~patrick/css/content-skel.css" />
  <link rel="meta" type="application/rdf+xml" title="FOAF" href="/~patrick/foaf.rdf" />
  <meta name="foaf:maker" content="foaf:mbox_sha1sum '48a3091d919c5e75a5b21d2f18164eb4d38ef2cd'" />
  <link rel="profile" href="http://microformats.org/profile/hcard" />
  <link rel="profile" href="http://microformats.org/profile/hcalendar" />
  <link rel="profile" href="http://gmpg.org/xfn/11" />
  <link rel="pgpkey" type="application/pgp-keys" href="/~patrick/505AB18E-public.asc" />
  <link rel="author" href="http://plus.google.com/109251121115002208129?rel=author" />
  <link rel="home" href="/~patrick/" title="Home page" />
  <link href="/~patrick/feeds/updates.xml" type="application/atom+xml" rel="alternate" title="Sitewide ATOM Feed" />
  <link rel="home" href="/~patrick/projects/UlyssesRedux/" title="Home page" />
  <link rel="icon" type="image/x-icon" href="/~patrick/icons/favicon.ico" />
  <link rel="contents" href="/~patrick/projects/UlyssesRedux/contents/" />
"""

html_header = html_header + """  <link rel="start" href="001.html" />
  <link rel="prev" href="%03d.html" />
  <link rel="next" href="%03d.html" />

  <title>Ulysses Redux #%03d</title>
  <meta name="generator" content="Bluefish 2.2.6" />
  <meta name="author" content="Patrick Mooney" />
  <meta name="dcterms.rights" content="Copyright © 2015&ndash;16 Patrick Mooney" />
  <meta name="description" content="Table of contents for Ulysses Redux #%03d" />
  <meta name="rating" content="general" />
  <meta name="revisit-after" content="10 days" />
""" % ((current_episode_number - 1), (current_episode_number + 1), current_episode_number, current_episode_number )

html_header = html_header + '''  <meta name="date" '''

html_header = html_header + """content="%s" />
  <meta property="fb:admins" content="100006098197123" />
  <meta property="og:url" content="http://patrickbrianmooney.nfshost.com/~patrick/projects/UlyssesRedux/contents/%03d.html" />
  <meta property="og:title" content="Ulysses Redux #%03d" />
  <meta property="og:description" content="Table of contents for Ulysses Redux #%03d" />
  <meta property="og:locale" content="en_US" />
  <meta property="og:site_name" content="Patrick Mooney's web site" />
  <meta property="og:image" content="http://patrickbrianmooney.nfshost.com/~patrick/icons/gear-large.png" />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:site" content="@patrick_mooney" />
  <meta name="twitter:creator" content="@patrick_mooney" />
  <meta name="twitter:title" content="Ulysses Redux #%03d" />
  <meta name="twitter:description" content="Table of contents for Ulysses Redux #%03d" />
  <meta name="twitter:image:src" content="http://patrickbrianmooney.nfshost.com/~patrick/icons/gear-large.png" />
</head>
""" % (time.strftime("%Y-%m-%dT%H:%M:%S"), current_episode_number, current_episode_number, current_episode_number, current_episode_number, current_episode_number)

html_file = html_header + """<body lang="en-US" xml:lang="en-US"><div class="container">

<!--Begin navigation and tracking code-->
<header id="main-nav">
  <script type="text/javascript" src="/~patrick/nav.js"></script>
  <noscript>
    <p class="simpleNav"><a rel="me home" href="index.html">Go home</a></p>
    <p class="simpleNav">If you had JavaScript turned on, you'd have more navigation options.</p>
  </noscript>

  <script type="text/javascript">

     var _gaq = _gaq || [];
     _gaq.push(['_setAccount', 'UA-37778547-1']);
     gaq.push(['_setDomainName', 'nfshost.com']);
     gaq.push(['_setAllowLinker', true]);
     gaq.push(['_trackPageview']);

     (function() {
       var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
       ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
       var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
     })();

  </script>
</header>
<!--end navigation and tracking code -->

<h1>Ulysses Redux #%03d: %s</h1>
""" % (current_episode_number, current_run_data['current-run-name'])

# OK, get a summary fragment and turn it into valid HTML, if it isn't already. Assumption: if the fragment as a whole is bracketed <p> ... </p>,
# then assume that it's a pre-formatted HTML fragment; otherwise, split it into lines and bracket those lines <p> ... </p>.

if current_run_data['summary'].startswith('<p>') and current_run_data['summary'].endswith('</p>'):
    summary_text = current_run_data['summary']
else:
    summary_text = '\n'.join(['<p>' + the_line.strip() + '</p>' for the_line in current_run_data['summary'].split('\n')])

html_file = html_file + """
<h2 id="summary">Summary</h2>

%s
""" % summary_text

html_file = html_file + """

<h2 id="toc">Contents</h2>

<ol>
"""

html_file = html_file + open(toc_fragment).read()

html_file = html_file + """</ol>

<h2 id="scripts">Scripts</h2>

<p>The scripts used to generate this edition of <cite class="book-title">Ulysses Redux</cite> are available <a rel="me" href="%s">here</a>.</p>

""" % (github_branch_base_path + current_git_branch)

html_file = html_file + """<footer class="status vevent vcard"><a class="url location" href="#">This web page</a> is copyright © %s by <a rel="me" href="/~patrick/" class="fn url">Patrick Mooney</a>. <abbr class="summary description" title="Last update to table of contents for Ulysses Redux #%03d">Last update to <a class="url" href="#">this HTML file</a></abbr>: <abbr class="dtstart" title="%s">%s</abbr>.</footer>

</div>
</body>
</html>
""" % (time.strftime("%Y"), current_episode_number, time.strftime("%Y-%m-%dT%H:%M:%S"), time.strftime("%d %B %Y"))

if debugging_flag: print("INFO Generated HTML file is:\n" + html_file + "\n")

the_output_file = open('%s%03d.html' % (webpage_contents_directory, current_episode_number), 'w')
the_output_file.write(html_file)
the_output_file.close

if debugging_flag: print("INFO: HTML file written; tidying ...")

subprocess.call(['tidy -m -i -w 0 -utf8 --doctype html5 --fix-uri true --new-blocklevel-tags footer --quote-nbsp true --preserve-entities yes %s%03d.html' % (webpage_contents_directory, current_episode_number)], shell=True)

if debugging_flag: print("\n\nINFO: Tidying done.")

print('\n')
if input('Update coding journal on website? ').lower()[0] == 'y':
    subprocess.call(["pandoc -f markdown -s -t html5 -o '/~patrick/projects/UlyssesRedux/coding.html' '/UlyssesRedux/coding thoughts.md'"], shell=True)
    with open('/~patrick/projects/UlyssesRedux/coding.html') as coding_journal:
        text = coding_journal.read().split('<body>')
    html_content = """
<!doctype html>
<html prefix="og: http://ogp.me/ns#" xml:lang="en" lang="en" xmlns="http://www.w3.org/1999/xhtml">
  <meta charset="utf-8" />
  <link rel="stylesheet" type="text/css" href="/~patrick/css/skeleton-normalize.css" />
  <link rel="stylesheet" type="text/css" href="/~patrick/css/skeleton.css" />
  <link rel="stylesheet" type="text/css" href="/~patrick/css/content-skel.css" />
  <link rel="meta" type="application/rdf+xml" title="FOAF" href="/~patrick/foaf.rdf" />
  <meta name="foaf:maker" content="foaf:mbox_sha1sum '48a3091d919c5e75a5b21d2f18164eb4d38ef2cd'" />
  <link rel="profile" href="http://gmpg.org/xfn/11" />
  <link rel="pgpkey" type="application/pgp-keys" href="/~patrick/505AB18E-public.asc" />
  <link rel="author" href="http://plus.google.com/109251121115002208129?rel=author" />
  <link rel="home" href="/~patrick/projects/UlyssesRedux" title="Home page" />
  <link rel="icon" type="image/x-icon" href="/~patrick/icons/favicon.ico" />
  <link href="/~patrick/feeds/updates.xml" type="application/atom+xml" rel="alternate" title="Sitewide ATOM Feed" />

  <title>Ulysses Redux Coding Notes</title>
  <meta name="generator" content="Bluefish 2.2.6" />
  <meta name="author" content="Patrick Mooney" />
  <meta name="dcterms.rights" content="Copyright © 2015–%s Patrick Mooney" />
  <meta name="description" content="Coding notes for Ulysses Redux, blog of auto-generated text based on Joyce's Ulysses" />
  <meta name="rating" content="general" />
  <meta name="revisit-after" content="10 days" />
  <meta name="date" content="2017-03-29T05:02:22-0700" />
  <meta property="fb:admins" content="100006098197123" />
  <meta property="og:url" content="http://patrickbrianmooney.nfshost.com/~patrick/projects/UlyssesRedux/coding.html" />
  <meta property="og:title" content="Ulysses Redux Coding Notes" />
  <meta property="og:description" content="Coding notes for Ulysses Redux, blog of auto-generated text based on Joyce's Ulysses" />
  <meta property="og:locale" content="en_US" />
  <meta property="og:site_name" content="Patrick Mooney's web site" />
  <meta property="og:image" content="http://patrickbrianmooney.nfshost.com/~patrick/icons/gear-large.png" />
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:site" content="@patrick_mooney" />
  <meta name="twitter:creator" content="@patrick_mooney" />
  <meta name="twitter:title" content="Ulysses Redux Coding Notes" />
  <meta name="twitter:description" content="Coding notes for Ulysses Redux, blog of auto-generated text based on Joyce's Ulysses" />
  <meta name="twitter:image:src" content="http://patrickbrianmooney.nfshost.com/~patrick/icons/gear-large.png" />
 </head>

<body lang="en-US" xml:lang="en-US">

<!--Begin navigation and tracking code-->
<header id="main-nav">
  <script type="text/javascript" src="/~patrick/nav.js"></script>
  <noscript>
    <p class="simpleNav"><a rel="me home" href="index.html">Go home</a></p>
    <p class="simpleNav">If you had JavaScript turned on, you'd have more navigation options.</p>
  </noscript>

  <script type="text/javascript">

     var _gaq = _gaq || [];
     _gaq.push(['_setAccount', 'UA-37778547-1']);
     gaq.push(['_setDomainName', 'nfshost.com']);
     gaq.push(['_setAllowLinker', true]);
     gaq.push(['_trackPageview']);

     (function() {
       var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
       ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
       var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
     })();

  </script>
</header>
<!--end navigation and tracking code -->

<div class="body-wrapper container main-content">
%s
</div>
</body>
</html>
""" % (datetime.datetime.now().year, datetime.datetime.now().isoformat(), text[1])
    with open('/~patrick/projects/UlyssesRedux/coding.html', mode='w') as html_file:
        html_file.write(html_content)
    subprocess.call(['tidy -m -i -w 0 -utf8 --doctype html5 --fix-uri true --new-blocklevel-tags footer --quote-nbsp true --preserve-entities yes /~patrick/projects/UlyssesRedux/coding.html'], shell=True)

if input('Update meta-TOC on local copy of website? ').lower()[0] == 'y':
    with open(meta_TOC_path) as TOC_file:
        TOC_text = TOC_file.read()
    TOC_split = TOC_text.split('</ol>')     # Works as long as there's only one ordered list in the document
    TOC_text = TOC_split[0] + '<li class="vevent"><a class="url location" rel="me muse" href="%03d.html"><cite class="book-title">%s</cite></a> (<span class="dtstart">%s</span>): <span class="summary description">%s</span></li>' % (current_episode_number, current_run_data['current-run-name'], time.strftime("%Y-%m-%d"), current_run_data['summary']) + '\n  </ol>\n</section>\n</div>\n</body>\n</html>'
    with open(meta_TOC_path, 'w') as TOC_file:
        TOC_file.write(TOC_text)

if input('Sync web page to main site? ').lower()[0] == 'y':
    # This script lives on my hard drive at ~/.scripts/sync-website.sh
    subprocess.check_call(['sync-website.sh'], shell=True)

if input("Want to tweet about the new edition that's out? ").lower()[0] == 'y':
    the_tweet = 'Ulysses Redux # %03d (%s) is out: %s%03d' % (current_episode_number, current_run_data['current-run-name'], remote_webpage_contents, current_episode_number)
    if input("Want to use the suggested tweet '%s'? " % the_tweet).lower()[0] != 'y':
        the_tweet = "X" * 200
        while len(the_tweet) > 117:     # 117 seems to be the maximum length of a tweet not counting a single URL that it contains.
            the_tweet = input("OK, Shakespeare, write a tweet of 117 characters or less yourself: ")
    social_media.post_tweet(social_media_auth.personalTwitter_client, the_tweet)

print('\n\n')
if input("We're done here. Want to set up the next run? ").lower()[0] == 'y':
    subprocess.check_call(['/UlyssesRedux/scripts/utility_scripts/setup-run.py'], shell=True)
